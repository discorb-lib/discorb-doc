{"pageProps":{"data":{"namespace":["Discorb","Client"],"parent":[],"type":"class","abstract":false,"docstring":{"text":"Class for connecting to the Discord server.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"children":{"classes":[],"modules":[]},"consts":[],"rattrs":[{"name":"intents","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Intents"],"description":"The intents that the client is currently using."}]},{"name":"application","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Application"],"description":"The application that the client is using."},{"class":["nil"],"description":"If never fetched application by {#fetch_application}."}]},{"name":"http","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::HTTP"],"description":"The http client."}]},{"name":"heartbeat_interval","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Integer"],"description":"The heartbeat interval."}]},{"name":"api_version","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Integer"],"description":"The API version of the Discord gateway."},{"class":["nil"],"description":"If not connected to the gateway."}]},{"name":"token","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["String"],"description":"The token of the client."}]},{"name":"allowed_mentions","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::AllowedMentions"],"description":"The allowed mentions that the client is using."}]},{"name":"user","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::ClientUser"],"description":"The client user."}]},{"name":"guilds","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Dictionary{Discorb::Snowflake => Discorb::Guild}"],"description":"A dictionary of guilds."}]},{"name":"users","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Dictionary{Discorb::Snowflake => Discorb::User}"],"description":"A dictionary of users."}]},{"name":"channels","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Dictionary{Discorb::Snowflake => Discorb::Channel}"],"description":"A dictionary of channels."}]},{"name":"emojis","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Dictionary{Discorb::Snowflake => Discorb::Emoji}"],"description":"A dictionary of emojis."}]},{"name":"messages","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Dictionary{Discorb::Snowflake => Discorb::Message}"],"description":"A dictionary of messages."}]},{"name":"log","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::Logger"],"description":"The logger."}]},{"name":"commands","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Array<Discorb::ApplicationCommand::Command>"],"description":"The commands that the client is using."}]},{"name":"ping","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Float"],"description":"The ping of the client.\n@note This will be calculated from heartbeat and heartbeat_ack."},{"class":["nil"],"description":"If not connected to the gateway."}]},{"name":"status","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":[":initialized",":running",":closed"],"description":"The status of the client."}]},{"name":"session_id","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Integer"],"description":"The session ID of connection."}]},{"name":"extensions","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[{"class":["Hash{String => Discorb::Extension}"],"description":"The loaded extensions."}]},{"name":"bottom_commands","docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"parent":[true,["Discorb","Client"]],"returns":[]}],"imethods":[{"docstring":{"text":"Initializes a new client.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"initialize","parent":[true,["Discorb","Client"]],"returns":[{"class":["Client"],"description":"a new instance of Client"}],"aliases":[],"params":[{"class":["Discorb::AllowedMentions"],"name":"allowed_mentions","required":false,"default":"nil","type":"keyword","description":"The allowed mentions that the client is using."},{"class":["Discorb::Intents"],"name":"intents","required":false,"default":"nil","type":"keyword","description":"The intents that the client is currently using."},{"class":["Integer"],"name":"message_caches","required":false,"default":"1000","type":"keyword","description":"The number of messages to cache."},{"class":["#puts"],"name":"log","required":false,"default":"nil","type":"keyword","description":"The IO object to use for logging."},{"class":["Boolean"],"name":"colorize_log","required":false,"default":"false","type":"keyword","description":"Whether to colorize the log."},{"class":[":debug",":info",":warn",":error",":critical"],"name":"log_level","required":false,"default":":info","type":"keyword","description":"The log level."},{"class":["Boolean"],"name":"wait_until_ready","required":false,"default":"true","type":"keyword","description":"Whether to delay event dispatch until ready."},{"class":["Boolean"],"name":"fetch_member","required":false,"default":"false","type":"keyword","description":"Whether to fetch member on ready. This may slow down the client. Default to `false`."},{"class":["String"],"name":"title","required":false,"default":"nil","type":"keyword","description":"The title of the process. `false` to default, `nil` to `discorb: User#0000`. Default to `nil`."}],"flags":{"async":false}},{"docstring":{"text":"Registers an event handler.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[["file:docs/Events.md","Events Documentation"]]},"name":"on","parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::EventHandler"],"description":"The event."}],"aliases":[],"params":[{"class":["Symbol"],"name":"event_name","required":true,"default":null,"type":"positional","description":"The name of the event."},{"class":["Symbol"],"name":"id","required":false,"default":"nil","type":"keyword","description":"Custom ID of the event."},{"class":["Hash"],"name":"metadata","required":true,"default":null,"type":"positional","description":"The metadata of the event."},{"class":["Proc"],"name":"block","required":true,"default":null,"type":"block","description":"The block to execute when the event is triggered."}],"flags":{"async":false}},{"docstring":{"text":"Almost same as {#on}, but only triggers the event once.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"once","parent":[true,["Discorb","Client"]],"returns":[{"class":["Discorb::EventHandler"],"description":"The event."}],"aliases":[],"params":[{"class":["Symbol"],"name":"event_name","required":true,"default":null,"type":"positional","description":"The name of the event."},{"class":["Symbol"],"name":"id","required":false,"default":"nil","type":"keyword","description":"Custom ID of the event."},{"class":["Hash"],"name":"metadata","required":true,"default":null,"type":"positional","description":"The metadata of the event."},{"class":["Proc"],"name":"block","required":true,"default":null,"type":"block","description":"The block to execute when the event is triggered."}],"flags":{"async":false}},{"docstring":{"text":"Remove event by ID.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"remove_event","parent":[true,["Discorb","Client"]],"returns":[],"aliases":[],"params":[{"class":["Symbol"],"name":"event_name","required":true,"default":null,"type":"positional","description":"The name of the event."},{"class":["Symbol"],"name":"id","required":true,"default":null,"type":"positional","description":"The ID of the event."}],"flags":{"async":false}},{"docstring":{"text":"Dispatch an event.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"dispatch","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<void>"],"description":"The task."}],"aliases":[],"params":[{"class":["Symbol"],"name":"event_name","required":true,"default":null,"type":"positional","description":"The name of the event."},{"class":["Object"],"name":"args","required":true,"default":null,"type":"positional","description":"The arguments to pass to the event."}],"flags":{"async":true}},{"docstring":{"text":"Fetch user from ID.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_user","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Discorb::User>"],"description":"The user."}],"aliases":[],"params":[{"class":["#to_s"],"name":"id","required":true,"default":null,"type":"positional","description":"<description>"}],"flags":{"async":true}},{"docstring":{"text":"Fetch channel from ID.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_channel","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Discorb::Channel>"],"description":"The channel."}],"aliases":[],"params":[{"class":["#to_s"],"name":"id","required":true,"default":null,"type":"positional","description":"The ID of the channel."}],"flags":{"async":true}},{"docstring":{"text":"Fetch guild from ID.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_guild","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Discorb::Guild>"],"description":"The guild."}],"aliases":[],"params":[{"class":["#to_s"],"name":"id","required":true,"default":null,"type":"positional","description":"<description>"}],"flags":{"async":true}},{"docstring":{"text":"Fetch invite from code.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_invite","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Discorb::Invite>"],"description":"The invite."}],"aliases":[],"params":[{"class":["String"],"name":"code","required":true,"default":null,"type":"positional","description":"The code of the invite."},{"class":["Boolean"],"name":"with_count","required":false,"default":"false","type":"keyword","description":"Whether to include the count of the invite."},{"class":["Boolean"],"name":"with_expiration","required":false,"default":"false","type":"keyword","description":"Whether to include the expiration of the invite."}],"flags":{"async":true}},{"docstring":{"text":"Fetch webhook from ID.\nIf application was cached, it will be used.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_application","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Discorb::Application>"],"description":"The application."}],"aliases":[],"params":[{"class":["Boolean"],"name":"force","required":false,"default":"false","type":"keyword","description":"Whether to force the fetch."}],"flags":{"async":true}},{"docstring":{"text":"Fetch nitro sticker pack from ID.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"fetch_nitro_sticker_packs","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Array<Discorb::Sticker::Pack>>"],"description":"The packs."}],"aliases":[],"params":[],"flags":{"async":true}},{"docstring":{"text":"Update presence of the client.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"update_presence","parent":[true,["Discorb","Client"]],"returns":[],"aliases":["change_presence"],"params":[{"class":["Discorb::Activity"],"name":"activity","required":false,"default":"nil","type":"positional","description":"The activity to update."},{"class":[":online",":idle",":dnd",":invisible"],"name":"status","required":false,"default":"nil","type":"keyword","description":"The status to update."},{"class":["String"],"name":"afk","required":false,"default":"false","type":"keyword","description":"Whether to set the client as AFK."}],"flags":{"async":false}},{"docstring":{"text":"Method to wait for a event.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"event_lock","parent":[true,["Discorb","Client"]],"returns":[{"class":["Async::Task<Object>"],"description":"The result of the event."}],"aliases":["await"],"params":[{"class":["Symbol"],"name":"event","required":true,"default":null,"type":"positional","description":"The name of the event."},{"class":["Integer"],"name":"timeout","required":false,"default":"nil","type":"positional","description":"The timeout in seconds."},{"class":["Proc"],"name":"check","required":true,"default":null,"type":"block","description":"The check to use."}],"flags":{"async":true}},{"docstring":{"text":"","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"inspect","parent":[true,["Discorb","Client"]],"returns":[],"aliases":[],"params":[],"flags":{"async":false}},{"docstring":{"text":"Load the extension.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"load_extension","parent":[true,["Discorb","Client"]],"returns":[],"aliases":[],"params":[{"class":["Class","Discorb::Extension"],"name":"ext","required":true,"default":null,"type":"positional","description":"The extension to load."}],"flags":{"async":false}},{"docstring":{"text":"Starts the client.","notes":["This method behavior will change by CLI.","If the token is nil, you should use `discorb run` with the `-e` or `--env` option."],"todo":[],"deprecated":[],"example":[],"see_also":[["file:docs/cli.md","CLI documentation"]]},"name":"run","parent":[true,["Discorb","Client"]],"returns":[],"aliases":[],"params":[{"class":["String","nil"],"name":"token","required":false,"default":"nil","type":"positional","description":"The token to use."}],"flags":{"async":false}},{"docstring":{"text":"Stops the client.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"close!","parent":[true,["Discorb","Client"]],"returns":[],"aliases":[],"params":[],"flags":{"async":false}},{"docstring":{"text":"Add new top-level command.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[["file:docs/application_command.md#register-slash-command","Application Comamnds: Register Slash Command"],["file:docs/cli/setup.md","CLI: setup"]]},"name":"slash","parent":[false,["Discorb","ApplicationCommand","Handler"]],"returns":[{"class":["Discorb::ApplicationCommand::Command::SlashCommand"],"description":"Command object."}],"aliases":[],"params":[{"class":["String"],"name":"command_name","required":true,"default":null,"type":"positional","description":"Command name."},{"class":["String"],"name":"description","required":true,"default":null,"type":"positional","description":"Command description."},{"class":["Hash{String => Hash{:description => String, :optional => Boolean, :type => Object}}"],"name":"options","required":false,"default":"{}","type":"positional","description":"Command options.\nThe key is the option name, the value is a hash with the following keys:\n\n| Key | Type | Description |\n| --- | --- | --- |\n| `:description` | `String` | Description of the option. |\n| `:required` | Whether the argument is required. `optional` will be used if not specified. |\n| `:optional` | Whether the argument is optional. `required` will be used if not specified. |\n| `:type` | `Object` | Type of the option. |\n| `:choice` | `Hash{String => String, Integer, Float}` | Type of the option. |\n| `:default` | `Object` | Default value of the option. |\n| `:channel_types` | `Array<Class<Discorb::Channel>>` | Type of the channel option. |\n| `:autocomplete` | `Proc` | Autocomplete function. |\n| `:range` | `Range` | Range of the option. Only valid for numeric options. (`:int`, `:float`) |"},{"class":["Array<#to_s>","false","nil"],"name":"guild_ids","required":false,"default":"nil","type":"keyword","description":"Guild IDs to set the command to. `false` to global command, `nil` to use default."},{"class":["Proc"],"name":"block","required":true,"default":null,"type":"block","description":"Command block."}],"flags":{"async":false}},{"docstring":{"text":"Add new command with group.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[["file:docs/application_command.md","Application Commands"],["file:docs/cli/setup.md","CLI: setup"]]},"name":"slash_group","parent":[false,["Discorb","ApplicationCommand","Handler"]],"returns":[{"class":["Discorb::ApplicationCommand::Command::GroupCommand"],"description":"Command object."}],"aliases":[],"params":[{"class":["String"],"name":"command_name","required":true,"default":null,"type":"positional","description":"Command name."},{"class":["String"],"name":"description","required":true,"default":null,"type":"positional","description":"Command description."},{"class":["Array<#to_s>","false","nil"],"name":"guild_ids","required":false,"default":"nil","type":"keyword","description":"Guild IDs to set the command to. `false` to global command, `nil` to use default."}],"flags":{"async":false}},{"docstring":{"text":"Add message context menu command.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"message_command","parent":[false,["Discorb","ApplicationCommand","Handler"]],"returns":[{"class":["Discorb::ApplicationCommand::Command"],"description":"Command object."}],"aliases":[],"params":[{"class":["String"],"name":"command_name","required":true,"default":null,"type":"positional","description":"Command name."},{"class":["Array<#to_s>","false","nil"],"name":"guild_ids","required":false,"default":"nil","type":"keyword","description":"Guild IDs to set the command to. `false` to global command, `nil` to use default."},{"class":["Proc"],"name":"block","required":true,"default":null,"type":"block","description":"Command block."}],"flags":{"async":false}},{"docstring":{"text":"Add user context menu command.","notes":[],"todo":[],"deprecated":[],"example":[],"see_also":[]},"name":"user_command","parent":[false,["Discorb","ApplicationCommand","Handler"]],"returns":[{"class":["Discorb::ApplicationCommand::Command"],"description":"Command object."}],"aliases":[],"params":[{"class":["String"],"name":"command_name","required":true,"default":null,"type":"positional","description":"Command name."},{"class":["Array<#to_s>","false","nil"],"name":"guild_ids","required":false,"default":"nil","type":"keyword","description":"Guild IDs to set the command to. `false` to global command, `nil` to use default."},{"class":["Proc"],"name":"block","required":true,"default":null,"type":"block","description":"Command block."}],"flags":{"async":false}},{"docstring":{"text":"Setup commands.","notes":["`token` parameter only required if you don't run client."],"todo":[],"deprecated":[],"example":[],"see_also":[["Client#initialize","Client#initialize"]]},"name":"setup_commands","parent":[false,["Discorb","ApplicationCommand","Handler"]],"returns":[],"aliases":[],"params":[{"class":["String"],"name":"token","required":false,"default":"nil","type":"positional","description":"Bot token."},{"class":["Array<#to_s>","false","nil"],"name":"guild_ids","required":false,"default":"nil","type":"keyword","description":"Guild IDs to use as default. If `false` is given, it will be global command."}],"flags":{"async":true}}],"cmethods":[]}},"__N_SSG":true}